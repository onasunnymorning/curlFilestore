COMPOSE_PROJECT_NAME=curlFileStore

# Which environment is running? These should be "development" or "production".
FLASK_ENV=development
NODE_ENV=development

# You should generate a random string of 64+ characters for this value in prod.
SECRET_KEY=insecure_key_for_dev

# With Docker for Windows / Mac / Linux then this default value should work.
# If you have Docker running in a VM, put the VM's IP address here instead.
#SERVER_NAME=localhost:8000

# Should Docker restart your containers if they go down?
DOCKER_RESTART_POLICY=no

# What healthcheck test command do you want to run? In development, having it
# curl your web server will result in a lot of log spam, so setting it to
# /bin/true is an easy way to make the healthcheck do basically nothing.
DOCKER_HEALTHCHECK_TEST=/bin/true

# How long should Docker wait before it SIGKILLs your process?
#DOCKER_STOP_GRACE_PERIOD=3s

# What port should be published back to the Docker host for your app server?
DOCKER_WEB_PORT=8000

# What volume path should be used?
#DOCKER_WEB_VOLUME=.:/app

# What port should be published back to the Docker host? Be careful with using
# 0.0.0.0 or no host on the left because then anyone will be able to attempt to
# log in to your PostgreSQL server since the port would be publicly accessible.
#
# If you're using Docker for Windows / Mac, it's safe to keep it as is and you
# will be able to connect to PostgreSQL with external tools like pgadmin.
# Change this to your VM's IP address if you're using the Docker Toolbox.
#DOCKER_POSTGRES_PORT=127.0.0.1:5432:5432